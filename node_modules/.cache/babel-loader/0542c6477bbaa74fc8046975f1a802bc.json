{"ast":null,"code":"var _jsxFileName = \"/Users/tim/DCI/Assignments/spa-final-project-blog/src/Components/EditModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport ShowModalContext from '../Context/ShowModalContext';\nimport PostContext from '../Context/PostContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditModal({\n  entry\n}) {\n  _s();\n\n  const {\n    posts,\n    setPosts\n  } = useContext(PostContext);\n  const {\n    show,\n    setShow,\n    setEdit\n  } = useContext(ShowModalContext);\n  const [title, setTitle] = useState(entry.title);\n  const [content, setContent] = useState(entry.content);\n  const [remove, setRemove] = useState(\"\");\n  const [save, setSave] = useState(\"\");\n\n  function wannaRemove(id) {\n    if (remove == id) {\n      setRemove(\"\");\n    } else {\n      setRemove(id);\n    }\n  }\n\n  function removePost(id) {\n    const newPosts = posts.filter(post => {\n      return post.id != id;\n    });\n    setEdit(\"\");\n    setPosts(newPosts);\n  }\n\n  useEffect(() => {\n    const close = e => e.key === 'Escape' ? setShow(\"\") : null;\n\n    window.addEventListener('keydown', close);\n    return () => window.removeEventListener('keydown', close);\n  }, []);\n\n  function saveChanges() {}\n\n  function closeEdit() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: closeEdit,\n        className: \"close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-inner\",\n        style: {\n          backgroundColor: `${entry.color}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: entry.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setTitle(e.target.value),\n            value: title,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-edit-body\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: e => setContent(e.target.value),\n            value: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: saveChanges,\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => wannaRemove(entry.id),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), remove == entry.id ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sure\",\n              children: [\"delete? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => removePost(entry.id),\n                children: \"y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 65\n              }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setRemove(\"\"),\n                children: \"n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 117\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), entry.updated != \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"updated \", entry.updated]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 36\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"FH3/71SNldv1iNHc6KeU/Wo6F1E=\");\n\n_c = EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/tim/DCI/Assignments/spa-final-project-blog/src/Components/EditModal.jsx"],"names":["React","useContext","useEffect","useState","ShowModalContext","PostContext","EditModal","entry","posts","setPosts","show","setShow","setEdit","title","setTitle","content","setContent","remove","setRemove","save","setSave","wannaRemove","id","removePost","newPosts","filter","post","close","e","key","window","addEventListener","removeEventListener","saveChanges","closeEdit","backgroundColor","color","time","target","value","updated"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport ShowModalContext from '../Context/ShowModalContext';\nimport PostContext from '../Context/PostContext';\n\nexport default function EditModal({entry}) {\n  const {posts, setPosts} = useContext(PostContext);\n  const {show, setShow, setEdit} = useContext(ShowModalContext);\n\n  const [title,setTitle] = useState(entry.title);\n  const [content, setContent] = useState(entry.content);\n\n  const [remove, setRemove] = useState(\"\");\n  const [save, setSave] = useState(\"\");\n\n  function wannaRemove(id){\n    if(remove == id){\n      setRemove(\"\");\n    } else {\n      setRemove(id);\n    }\n  }\n\n  function removePost(id){\n    const newPosts = posts.filter((post)=>{\n      return post.id != id;\n    });\n    setEdit(\"\");\n    setPosts(newPosts);\n  }\n\n  useEffect(() => {\n    const close = (e) => e.key === 'Escape' ? setShow(\"\") : null;\n    window.addEventListener('keydown', close);\n    return () => window.removeEventListener('keydown', close);\n  },[]);\n\n  function saveChanges(){\n    \n  }\n\n  function closeEdit(){\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-inner-container\">\n        <div onClick={closeEdit} className=\"close\">×</div>\n        <div className=\"modal-inner\" style={{backgroundColor: `${entry.color}`}}>\n          <div className=\"modal-header\">\n            <small>{entry.time}</small>\n            <input onChange={(e)=>setTitle(e.target.value)} value={title} type=\"text\"/>\n          </div>\n          <div className=\"modal-edit-body\">\n            <textarea onChange={(e)=>setContent(e.target.value)} value={content} ></textarea>\n          </div>\n          <div className=\"modal-footer\">\n            <div className=\"modal-icons\">\n              <div onClick={saveChanges}>✅</div>\n              <div onClick={()=>wannaRemove(entry.id)}>❌</div>\n              {remove == entry.id ? <p className=\"sure\">delete? <span onClick={()=>removePost(entry.id)}>y</span> / <span onClick={()=>setRemove(\"\")}>n</span></p> : null}\n\n            </div>\n            {entry.updated != \"\" ? <p><small>updated {entry.updated}</small></p> : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}