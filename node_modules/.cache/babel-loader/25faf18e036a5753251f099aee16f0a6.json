{"ast":null,"code":"var _jsxFileName = \"/Users/tim/DCI/Assignments/spa-final-project-blog/src/Components/ShowModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport ShowModalContext from '../Context/ShowModalContext';\nimport PostContext from '../Context/PostContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowModal({\n  entry\n}) {\n  _s();\n\n  const {\n    posts,\n    setPosts\n  } = useContext(PostContext);\n  const {\n    show,\n    setShow,\n    setEdit\n  } = useContext(ShowModalContext);\n  const [remove, setRemove] = useState(\"\");\n\n  function wannaRemove(id) {\n    remove == id ? setRemove(\"\") : setRemove(id);\n  }\n\n  function removePost(id) {\n    const newPosts = posts.filter(post => {\n      return post.id != id;\n    });\n    setShow(\"\");\n    setPosts(newPosts);\n  }\n\n  useEffect(() => {\n    const close = e => e.key === 'Escape' ? setShow(\"\") : null;\n\n    window.addEventListener('keydown', close);\n    return () => window.removeEventListener('keydown', close);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setShow(\"\"),\n        className: \"close\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-inner\",\n        style: {\n          backgroundColor: `${entry.color}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: entry.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: entry.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setEdit(show),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => wannaRemove(entry.id),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), remove == entry.id ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sure\",\n              children: [\"sure? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => removePost(entry.id),\n                children: \"y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 63\n              }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setRemove(\"\"),\n                children: \"n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 115\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), entry.updated != \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"updated \", entry.updated]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowModal, \"Ov4EqvJkbum1uzl8SPF3s6VLu/w=\");\n\n_c = ShowModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowModal\");","map":{"version":3,"sources":["/Users/tim/DCI/Assignments/spa-final-project-blog/src/Components/ShowModal.jsx"],"names":["React","useContext","useEffect","useState","ShowModalContext","PostContext","ShowModal","entry","posts","setPosts","show","setShow","setEdit","remove","setRemove","wannaRemove","id","removePost","newPosts","filter","post","close","e","key","window","addEventListener","removeEventListener","backgroundColor","color","time","title","content","updated"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport ShowModalContext from '../Context/ShowModalContext';\nimport PostContext from '../Context/PostContext';\n\nexport default function ShowModal({entry}) {\n  const {posts, setPosts} = useContext(PostContext);\n  const {show, setShow, setEdit} = useContext(ShowModalContext);\n\n  const [remove, setRemove] = useState(\"\");\n\n  function wannaRemove(id){\n    remove == id ? setRemove(\"\") : setRemove(id);\n  }\n\n  function removePost(id){\n    const newPosts = posts.filter((post)=>{\n      return post.id != id;\n    });\n    setShow(\"\");\n    setPosts(newPosts);\n  }\n\n  useEffect(() => {\n    const close = (e) => e.key === 'Escape' ? setShow(\"\") : null;\n    window.addEventListener('keydown', close);\n    return () => window.removeEventListener('keydown', close);\n  },[])\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-inner-container\">\n        <div onClick={()=>setShow(\"\")} className=\"close\">×</div>\n        <div className=\"modal-inner\" style={{backgroundColor: `${entry.color}`}}>\n          <div className=\"modal-header\">\n            <small>{entry.time}</small>\n            <h4>{entry.title}</h4>\n          </div>\n          <div className=\"modal-body\">\n            <p>{entry.content}</p>\n          </div>\n          <div className=\"modal-footer\">\n            <div className=\"modal-icons\">\n              <div onClick={()=>setEdit(show)}>✏️</div>\n              <div onClick={()=>wannaRemove(entry.id)}>❌</div>\n              {remove == entry.id ? <p className=\"sure\">sure? <span onClick={()=>removePost(entry.id)}>y</span> / <span onClick={()=>setRemove(\"\")}>n</span></p> : null}\n            </div>\n            {entry.updated != \"\" ? <p><small>updated {entry.updated}</small></p> : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}